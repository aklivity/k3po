grammar
parser
el
ast
visitors
handlers
value encoders
configuration
wire protocol (tcp, not http)
  control decoder / encoder
isolate client project for design compatibility with other future client technologies
matcher decoders w/ tests
handler tests
visitor tests
deliver prepare event
track location progress in each pipeline

configuration generation tests
session over configuration
  Future start(Script script)
    done: cleanup bootstraps, use completion handler location infos to generate observed script
    cancel: abort script execution by closing channel group
    
script completion
robot client tests
robot junit tests
el coercion tests

client-side resource injection (eg. javascript bridge)
read/write/accept/accepted/connect options (bootstrap, bootstrap child.*)
accept / connect options for masks to compute as bytes are received / written, reference via EL expression?
SOCKS transport for TCP and robot configuration
tun2socks, bind9, VMWare Linux instance:  *.robot.pan (Private Area Network, wildcard certificate for *.robot.pan, browser install demo CA for Kaazing Testing)
BOSH transport (bidirectional, works from browser, control channel only, no overlap with testing)
xUnit integration for each client technology to remote control the robot (likely via BOSH from browser)

ssl handshake requirements: md5 digest, sha1 digest per stream
